<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Surat_selesai_kp_model extends CI_Model
{

    public $table = 'tbl_surat_selesai_kp';
    public $id = 'id_surat';
	public $column_order = array(null, 'tbl_surat_selesai_kp.id_surat', 'no_surat', 'nama_anggota', 'sifat', 'lampiran', 'kepada', 'tgl_surat', 'tgl_surat_kampus', 'tgl_surat_kesbangpol', 'no_kesbangpol', 'no_surat_kampus', 'tgl_mulai', 'tgl_selesai'); //field yang ada di table user
	public $column_search = array('tbl_surat_selesai_kp.id_surat', 'tgl_mulai', 'no_surat', 'nama_anggota', 'sifat', 'lampiran', 'kepada', 'tgl_surat', 'tgl_surat_kampus', 'tgl_surat_kesbangpol', 'no_kesbangpol', 'no_surat_kampus', 'tgl_mulai', 'tgl_selesai'); //field yang diizin untuk pencarian
	public $order = array('tbl_surat_selesai_kp.id_surat' => 'desc'); // default order

    function __construct()
    {
        parent::__construct();
    }

	private function _get_datatables_query()
	{

		$this->db->join("tbl_mahasiswa", "tbl_surat_selesai_kp.nama_pendaftar = tbl_mahasiswa.id_anggota");
		$this->db->from($this->table);

		$i = 0;

		foreach ($this->column_search as $item) // looping awal
		{
			if ($_POST['search']['value']) // jika datatable mengirimkan pencarian dengan metode POST
			{

				if ($i === 0) // looping awal
				{
					$this->db->group_start();
					$this->db->like($item, $_POST['search']['value']);
				} else {
					$this->db->or_like($item, $_POST['search']['value']);
				}

				if (count($this->column_search) - 1 == $i)
					$this->db->group_end();
			}
			$i++;
		}

		if (isset($_POST['order'])) {
			$this->db->order_by($this->column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
		} else if (isset($this->order)) {
			$order = $this->order;
			$this->db->order_by(key($order), $order[key($order)]);
		}
	}

	function get_datatables()
	{
		$this->_get_datatables_query();
		if ($_POST['length'] != -1)
			$this->db->limit($_POST['length'], $_POST['start']);
		$query = $this->db->get();
		return $query->result();
	}

	function count_filtered()
	{
		$this->_get_datatables_query();
		$query = $this->db->get();
		return $query->num_rows();
	}

	public function count_all()
	{
		$this->db->from($this->table);
		return $this->db->count_all_results();
	}

    // get data by id
    function get_by_id($id)
    {
        $this->db->join("tbl_mahasiswa", "tbl_mahasiswa.id_anggota = tbl_surat_selesai_kp.nama_pendaftar");
        $this->db->where("tbl_surat_selesai_kp.id_surat", $id);
        return $this->db->get($this->table)->row();
    }

    public function nomorOtomatis()
    {
        $this->db->select('MID(no_surat,7,4) as kode', FALSE);
        $this->db->order_by('id_surat','DESC');
        $this->db->limit(1);
        $query = $this->db->get($this->table);
        if($query->num_rows() <> 0){ //cek dulu apakah ada sudah ada kode di tabel.
            //jika kode ternyata sudah ada.
            $data = $query->row();
            $kode = intval($data->kode) + 1;
        }
        else {
            //jika kode belum ada
            $kode = 1;
        }
        $kodemax = str_pad($kode, 4, "0", STR_PAD_LEFT);
        $kodejadi = $kodemax;
        return $kodejadi;
    }

    function insert_anggota($data)
    {
        $this->db->insert("tbl_mahasiswa", $data);
		return $this->db->insert_id();
    }

    // insert data
    function insert($data)
    {
        $this->db->insert($this->table, $data);
        return $this->db->insert_id();
    }

    // update data
    function update($id, $data)
    {
        $this->db->where($this->id, $id);
        $this->db->update($this->table, $data);
    }

    // delete data
    function delete($id)
    {
        $this->db->where("id_surat", $id);
        $this->db->delete($this->table);
    }

    function deleteAnggota($id)
    {
        $this->db->where($this->id, $id);
        $this->db->delete("tbl_mahasiswa");
    }

}

/* End of file Surat_selesai_kp_model */
/* Location: ./application/models/Surat_selesai_kp_model.php/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2018-09-19 17:05:43 */
/* http://harviacode.com */
